
//
// StyleDictionary.swift
//

// Do not edit directly
// Generated on Wed, 12 Jan 2022 22:39:03 GMT


import UIKit

public class StyleDictionary {
    public static let colorBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorBlue100 = UIColor(red: 0.859, green: 0.918, blue: 0.996, alpha: 1)
    public static let colorBlue200 = UIColor(red: 0.749, green: 0.859, blue: 0.996, alpha: 1)
    public static let colorBlue300 = UIColor(red: 0.576, green: 0.773, blue: 0.992, alpha: 1)
    public static let colorBlue400 = UIColor(red: 0.376, green: 0.647, blue: 0.980, alpha: 1)
    public static let colorBlue50 = UIColor(red: 0.937, green: 0.965, blue: 1.000, alpha: 1)
    public static let colorBlue500 = UIColor(red: 0.231, green: 0.510, blue: 0.965, alpha: 1)
    public static let colorBlue600 = UIColor(red: 0.145, green: 0.388, blue: 0.922, alpha: 1)
    public static let colorBlue700 = UIColor(red: 0.114, green: 0.306, blue: 0.847, alpha: 1)
    public static let colorBlue800 = UIColor(red: 0.118, green: 0.251, blue: 0.686, alpha: 1)
    public static let colorBlue900 = UIColor(red: 0.118, green: 0.227, blue: 0.541, alpha: 1)
    public static let colorGray100 = UIColor(red: 0.976, green: 0.980, blue: 0.984, alpha: 1)
    public static let colorGray200 = UIColor(red: 0.898, green: 0.906, blue: 0.922, alpha: 1)
    public static let colorGray300 = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    public static let colorGray400 = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let colorGray50 = UIColor(red: 0.976, green: 0.980, blue: 0.984, alpha: 1)
    public static let colorGray500 = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    public static let colorGray600 = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    public static let colorGray700 = UIColor(red: 0.216, green: 0.255, blue: 0.318, alpha: 1)
    public static let colorGray8000 = UIColor(red: 0.122, green: 0.161, blue: 0.216, alpha: 1)
    public static let colorGray8001 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let colorGray900 = UIColor(red: 0.067, green: 0.094, blue: 0.153, alpha: 1)
    public static let colorGreen100 = UIColor(red: 0.863, green: 0.988, blue: 0.906, alpha: 1)
    public static let colorGreen200 = UIColor(red: 0.733, green: 0.969, blue: 0.816, alpha: 1)
    public static let colorGreen300 = UIColor(red: 0.525, green: 0.937, blue: 0.675, alpha: 1)
    public static let colorGreen400 = UIColor(red: 0.290, green: 0.871, blue: 0.502, alpha: 1)
    public static let colorGreen50 = UIColor(red: 0.941, green: 0.992, blue: 0.957, alpha: 1)
    public static let colorGreen500 = UIColor(red: 0.133, green: 0.773, blue: 0.369, alpha: 1)
    public static let colorGreen600 = UIColor(red: 0.086, green: 0.639, blue: 0.290, alpha: 1)
    public static let colorGreen700 = UIColor(red: 0.082, green: 0.502, blue: 0.239, alpha: 1)
    public static let colorGreen800 = UIColor(red: 0.086, green: 0.396, blue: 0.204, alpha: 1)
    public static let colorGreen900 = UIColor(red: 0.078, green: 0.325, blue: 0.176, alpha: 1)
    public static let colorIndigo100 = UIColor(red: 0.878, green: 0.906, blue: 1.000, alpha: 1)
    public static let colorIndigo200 = UIColor(red: 0.780, green: 0.824, blue: 0.996, alpha: 1)
    public static let colorIndigo300 = UIColor(red: 0.647, green: 0.706, blue: 0.988, alpha: 1)
    public static let colorIndigo50 = UIColor(red: 0.933, green: 0.949, blue: 1.000, alpha: 1)
    public static let colorIndigo500 = UIColor(red: 0.506, green: 0.549, blue: 0.973, alpha: 1)
    public static let colorIndigo600 = UIColor(red: 0.310, green: 0.275, blue: 0.898, alpha: 1)
    public static let colorIndigo700 = UIColor(red: 0.263, green: 0.220, blue: 0.792, alpha: 1)
    public static let colorIndigo800 = UIColor(red: 0.216, green: 0.188, blue: 0.639, alpha: 1)
    public static let colorIndigo900 = UIColor(red: 0.192, green: 0.180, blue: 0.506, alpha: 1)
    public static let colorPink100 = UIColor(red: 0.988, green: 0.906, blue: 0.953, alpha: 1)
    public static let colorPink200 = UIColor(red: 0.984, green: 0.812, blue: 0.910, alpha: 1)
    public static let colorPink300 = UIColor(red: 0.976, green: 0.659, blue: 0.831, alpha: 1)
    public static let colorPink400 = UIColor(red: 0.957, green: 0.447, blue: 0.714, alpha: 1)
    public static let colorPink50 = UIColor(red: 0.992, green: 0.949, blue: 0.973, alpha: 1)
    public static let colorPink500 = UIColor(red: 0.925, green: 0.282, blue: 0.600, alpha: 1)
    public static let colorPink600 = UIColor(red: 0.859, green: 0.153, blue: 0.467, alpha: 1)
    public static let colorPink700 = UIColor(red: 0.745, green: 0.094, blue: 0.365, alpha: 1)
    public static let colorPink800 = UIColor(red: 0.616, green: 0.090, blue: 0.302, alpha: 1)
    public static let colorPink900 = UIColor(red: 0.514, green: 0.094, blue: 0.263, alpha: 1)
    public static let colorPurple100 = UIColor(red: 0.953, green: 0.910, blue: 1.000, alpha: 1)
    public static let colorPurple200 = UIColor(red: 0.914, green: 0.835, blue: 1.000, alpha: 1)
    public static let colorPurple300 = UIColor(red: 0.847, green: 0.706, blue: 0.996, alpha: 1)
    public static let colorPurple400 = UIColor(red: 0.753, green: 0.518, blue: 0.988, alpha: 1)
    public static let colorPurple50 = UIColor(red: 0.980, green: 0.961, blue: 1.000, alpha: 1)
    public static let colorPurple500 = UIColor(red: 0.545, green: 0.361, blue: 0.965, alpha: 1)
    public static let colorPurple600 = UIColor(red: 0.576, green: 0.200, blue: 0.918, alpha: 1)
    public static let colorPurple700 = UIColor(red: 0.494, green: 0.133, blue: 0.808, alpha: 1)
    public static let colorPurple800 = UIColor(red: 0.420, green: 0.129, blue: 0.659, alpha: 1)
    public static let colorPurple900 = UIColor(red: 0.345, green: 0.110, blue: 0.529, alpha: 1)
    public static let colorRed100 = UIColor(red: 0.996, green: 0.886, blue: 0.886, alpha: 1)
    public static let colorRed200 = UIColor(red: 0.996, green: 0.792, blue: 0.792, alpha: 1)
    public static let colorRed300 = UIColor(red: 0.988, green: 0.647, blue: 0.647, alpha: 1)
    public static let colorRed400 = UIColor(red: 0.973, green: 0.443, blue: 0.443, alpha: 1)
    public static let colorRed50 = UIColor(red: 0.996, green: 0.949, blue: 0.949, alpha: 1)
    public static let colorRed500 = UIColor(red: 0.937, green: 0.267, blue: 0.267, alpha: 1)
    public static let colorRed600 = UIColor(red: 0.863, green: 0.149, blue: 0.149, alpha: 1)
    public static let colorRed700 = UIColor(red: 0.725, green: 0.110, blue: 0.110, alpha: 1)
    public static let colorRed800 = UIColor(red: 0.600, green: 0.106, blue: 0.106, alpha: 1)
    public static let colorWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorYellow100 = UIColor(red: 0.996, green: 0.976, blue: 0.765, alpha: 1)
    public static let colorYellow200 = UIColor(red: 0.996, green: 0.941, blue: 0.541, alpha: 1)
    public static let colorYellow300 = UIColor(red: 0.992, green: 0.878, blue: 0.278, alpha: 1)
    public static let colorYellow400 = UIColor(red: 0.980, green: 0.800, blue: 0.082, alpha: 1)
    public static let colorYellow50 = UIColor(red: 0.996, green: 0.988, blue: 0.910, alpha: 1)
    public static let colorYellow500 = UIColor(red: 0.918, green: 0.702, blue: 0.031, alpha: 1)
    public static let colorYellow600 = UIColor(red: 0.792, green: 0.541, blue: 0.016, alpha: 1)
    public static let colorYellow700 = UIColor(red: 0.631, green: 0.384, blue: 0.027, alpha: 1)
    public static let colorYellow800 = UIColor(red: 0.522, green: 0.302, blue: 0.055, alpha: 1)
    public static let colorYellow900 = UIColor(red: 0.443, green: 0.247, blue: 0.071, alpha: 1)
    public static let fontText2xlRegular = "[object Object]"
    public static let fontText3xlRegular = "[object Object]"
    public static let fontText4xlRegular = "[object Object]"
    public static let fontText5xlRegular = "[object Object]"
    public static let fontText6xlRegular = "[object Object]"
    public static let fontTextBaseRegular = "[object Object]"
    public static let fontTextLgRegular = "[object Object]"
    public static let fontTextSmRegular = "[object Object]"
    public static let fontTextXlRegular = "[object Object]"
    public static let fontTextXsRegular = "[object Object]"
    public static let typographyText2xlRegularFontFamily = Helvetica Neue
    public static let typographyText2xlRegularFontSize = 24
    public static let typographyText2xlRegularFontStretch = normal
    public static let typographyText2xlRegularFontStyle = normal
    public static let typographyText2xlRegularFontWeight = 400
    public static let typographyText2xlRegularLetterSpacing = 0
    public static let typographyText2xlRegularLineHeight = 36
    public static let typographyText2xlRegularParagraphIndent = 0
    public static let typographyText2xlRegularParagraphSpacing = 0
    public static let typographyText2xlRegularTextCase = none
    public static let typographyText2xlRegularTextDecoration = none
    public static let typographyText3xlRegularFontFamily = Helvetica Neue
    public static let typographyText3xlRegularFontSize = 30
    public static let typographyText3xlRegularFontStretch = normal
    public static let typographyText3xlRegularFontStyle = normal
    public static let typographyText3xlRegularFontWeight = 400
    public static let typographyText3xlRegularLetterSpacing = 0
    public static let typographyText3xlRegularLineHeight = 45
    public static let typographyText3xlRegularParagraphIndent = 0
    public static let typographyText3xlRegularParagraphSpacing = 0
    public static let typographyText3xlRegularTextCase = none
    public static let typographyText3xlRegularTextDecoration = none
    public static let typographyText4xlRegularFontFamily = Helvetica Neue
    public static let typographyText4xlRegularFontSize = 36
    public static let typographyText4xlRegularFontStretch = normal
    public static let typographyText4xlRegularFontStyle = normal
    public static let typographyText4xlRegularFontWeight = 400
    public static let typographyText4xlRegularLetterSpacing = 0
    public static let typographyText4xlRegularLineHeight = 54
    public static let typographyText4xlRegularParagraphIndent = 0
    public static let typographyText4xlRegularParagraphSpacing = 0
    public static let typographyText4xlRegularTextCase = none
    public static let typographyText4xlRegularTextDecoration = none
    public static let typographyText5xlRegularFontFamily = Helvetica Neue
    public static let typographyText5xlRegularFontSize = 48
    public static let typographyText5xlRegularFontStretch = normal
    public static let typographyText5xlRegularFontStyle = normal
    public static let typographyText5xlRegularFontWeight = 400
    public static let typographyText5xlRegularLetterSpacing = 0
    public static let typographyText5xlRegularLineHeight = 72
    public static let typographyText5xlRegularParagraphIndent = 0
    public static let typographyText5xlRegularParagraphSpacing = 0
    public static let typographyText5xlRegularTextCase = none
    public static let typographyText5xlRegularTextDecoration = none
    public static let typographyText6xlRegularFontFamily = Helvetica Neue
    public static let typographyText6xlRegularFontSize = 64
    public static let typographyText6xlRegularFontStretch = normal
    public static let typographyText6xlRegularFontStyle = normal
    public static let typographyText6xlRegularFontWeight = 400
    public static let typographyText6xlRegularLetterSpacing = 0
    public static let typographyText6xlRegularLineHeight = 96
    public static let typographyText6xlRegularParagraphIndent = 0
    public static let typographyText6xlRegularParagraphSpacing = 0
    public static let typographyText6xlRegularTextCase = none
    public static let typographyText6xlRegularTextDecoration = none
    public static let typographyTextBaseRegularFontFamily = Helvetica Neue
    public static let typographyTextBaseRegularFontSize = 16
    public static let typographyTextBaseRegularFontStretch = normal
    public static let typographyTextBaseRegularFontStyle = normal
    public static let typographyTextBaseRegularFontWeight = 400
    public static let typographyTextBaseRegularLetterSpacing = 0
    public static let typographyTextBaseRegularLineHeight = 24
    public static let typographyTextBaseRegularParagraphIndent = 0
    public static let typographyTextBaseRegularParagraphSpacing = 0
    public static let typographyTextBaseRegularTextCase = none
    public static let typographyTextBaseRegularTextDecoration = none
    public static let typographyTextLgRegularFontFamily = Helvetica Neue
    public static let typographyTextLgRegularFontSize = 18
    public static let typographyTextLgRegularFontStretch = normal
    public static let typographyTextLgRegularFontStyle = normal
    public static let typographyTextLgRegularFontWeight = 400
    public static let typographyTextLgRegularLetterSpacing = 0
    public static let typographyTextLgRegularLineHeight = 27
    public static let typographyTextLgRegularParagraphIndent = 0
    public static let typographyTextLgRegularParagraphSpacing = 0
    public static let typographyTextLgRegularTextCase = none
    public static let typographyTextLgRegularTextDecoration = none
    public static let typographyTextSmRegularFontFamily = Helvetica Neue
    public static let typographyTextSmRegularFontSize = 14
    public static let typographyTextSmRegularFontStretch = normal
    public static let typographyTextSmRegularFontStyle = normal
    public static let typographyTextSmRegularFontWeight = 400
    public static let typographyTextSmRegularLetterSpacing = 0
    public static let typographyTextSmRegularLineHeight = 21
    public static let typographyTextSmRegularParagraphIndent = 0
    public static let typographyTextSmRegularParagraphSpacing = 0
    public static let typographyTextSmRegularTextCase = none
    public static let typographyTextSmRegularTextDecoration = none
    public static let typographyTextXlRegularFontFamily = Helvetica Neue
    public static let typographyTextXlRegularFontSize = 20
    public static let typographyTextXlRegularFontStretch = normal
    public static let typographyTextXlRegularFontStyle = normal
    public static let typographyTextXlRegularFontWeight = 400
    public static let typographyTextXlRegularLetterSpacing = 0
    public static let typographyTextXlRegularLineHeight = 30
    public static let typographyTextXlRegularParagraphIndent = 0
    public static let typographyTextXlRegularParagraphSpacing = 0
    public static let typographyTextXlRegularTextCase = none
    public static let typographyTextXlRegularTextDecoration = none
    public static let typographyTextXsRegularFontFamily = Helvetica Neue
    public static let typographyTextXsRegularFontSize = 12
    public static let typographyTextXsRegularFontStretch = normal
    public static let typographyTextXsRegularFontStyle = normal
    public static let typographyTextXsRegularFontWeight = 400
    public static let typographyTextXsRegularLetterSpacing = 0
    public static let typographyTextXsRegularLineHeight = 18
    public static let typographyTextXsRegularParagraphIndent = 0
    public static let typographyTextXsRegularParagraphSpacing = 0
    public static let typographyTextXsRegularTextCase = none
    public static let typographyTextXsRegularTextDecoration = none
}
